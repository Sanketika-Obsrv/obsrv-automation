cert-manager:
  cainjector:
    resources:
      limits:
        cpu: 0.05
        memory: 100Mi
      requests:
        cpu: 0.05
        memory: 100Mi
  fullnameOverride: cert-manager
  global:
    commonLabels:
      system.api: "true"
  installCRDs: true
  prometheus:
    enabled: true
    servicemonitor:
      enabled: true
      labels:
        release: monitoring
  webhook:
    resources:
      limits:
        cpu: 0.05
        memory: 100Mi
      requests:
        cpu: 0.05
        memory: 100Mi

dataset-api:
  encryption_key: strong_encryption_key_to_encrypt
  grafana_token: &grafana_token YWRtaW46cHJvbS1vcGVyYXRvcg==

druid-exporter:
  fullnameOverride: druid-exporter

druid-operator:
  fullNameOverride: druid-operator

druid-raw-cluster:
  namespace: &druidns druid-raw
  zookeeper:
    fullNameOverride: druid-raw-zookeeper
    namespace: *druidns

flink:
  commonLabels:
    app: flink

kafka:
  fullnameOverride: kafka
  zookeeper:
    fullnameOverride: kafka-zookeeper

kafka-exporter:
  fullnameOverride: kafka-exporter

keycloak:
  keycloakConfigCli:
    configuration:
      obsrv.json: |-
        {
          "id": "78b14577-d627-476d-b308-217929a6ae0f",
          "realm": "obsrv",
          "displayName": "Obsrv",
          "displayNameHtml": "",
          "notBefore": 0,
          "defaultSignatureAlgorithm": "RS256",
          "revokeRefreshToken": false,
          "refreshTokenMaxReuse": 0,
          "accessTokenLifespan": 300,
          "accessTokenLifespanForImplicitFlow": 900,
          "ssoSessionIdleTimeout": 1800,
          "ssoSessionMaxLifespan": 36000,
          "ssoSessionIdleTimeoutRememberMe": 0,
          "ssoSessionMaxLifespanRememberMe": 0,
          "offlineSessionIdleTimeout": 2592000,
          "offlineSessionMaxLifespanEnabled": false,
          "offlineSessionMaxLifespan": 5184000,
          "clientSessionIdleTimeout": 0,
          "clientSessionMaxLifespan": 0,
          "clientOfflineSessionIdleTimeout": 0,
          "clientOfflineSessionMaxLifespan": 0,
          "accessCodeLifespan": 60,
          "accessCodeLifespanUserAction": 300,
          "accessCodeLifespanLogin": 1800,
          "actionTokenGeneratedByAdminLifespan": 43200,
          "actionTokenGeneratedByUserLifespan": 300,
          "oauth2DeviceCodeLifespan": 600,
          "oauth2DevicePollingInterval": 5,
          "enabled": true,
          "sslRequired": "external",
          "registrationAllowed": false,
          "registrationEmailAsUsername": false,
          "rememberMe": false,
          "verifyEmail": false,
          "loginWithEmailAllowed": true,
          "duplicateEmailsAllowed": false,
          "resetPasswordAllowed": false,
          "editUsernameAllowed": false,
          "bruteForceProtected": false,
          "permanentLockout": false,
          "maxTemporaryLockouts": 0,
          "bruteForceStrategy": "MULTIPLE",
          "maxFailureWaitSeconds": 900,
          "minimumQuickLoginWaitSeconds": 60,
          "waitIncrementSeconds": 60,
          "quickLoginCheckMilliSeconds": 1000,
          "maxDeltaTimeSeconds": 43200,
          "failureFactor": 30,
          "roles": {
            "realm": [
              {
                "id": "9159a352-e046-4f5f-b83c-73b303839cf6",
                "name": "default-roles-obsrv-web-console",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                  "realm": [
                    "offline_access",
                    "uma_authorization"
                  ],
                  "client": {
                    "realm-management": [
                      "view-users",
                      "manage-realm",
                      "view-realm",
                      "manage-authorization",
                      "create-client",
                      "query-users",
                      "query-clients",
                      "manage-users",
                      "query-groups",
                      "realm-admin",
                      "view-clients",
                      "manage-clients",
                      "view-authorization",
                      "query-realms"
                    ],
                    "broker": [
                      "read-token"
                    ],
                    "account": [
                      "view-applications",
                      "manage-account",
                      "view-profile"
                    ]
                  }
                },
                "clientRole": false,
                "containerId": "78b14577-d627-476d-b308-217929a6ae0f",
                "attributes": {}
              },
              {
                "id": "d0bfb87a-b7ee-45a3-aac2-88fcd355d360",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "78b14577-d627-476d-b308-217929a6ae0f",
                "attributes": {}
              },
              {
                "id": "dc700720-cf56-41f7-9055-281bf4aa2b61",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "78b14577-d627-476d-b308-217929a6ae0f",
                "attributes": {}
              }
            ],
            "client": {
              "realm-management": [
                {
                  "id": "4a8dbc1e-c803-445c-a632-042cfd12b4ca",
                  "name": "manage-events",
                  "description": "${role_manage-events}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "88e807ac-8b50-4cd5-863e-71bf88ad2aaa",
                  "name": "view-users",
                  "description": "${role_view-users}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "realm-management": [
                        "query-users",
                        "query-groups"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "cc54b829-ef88-4b55-8377-6f9f02805f4b",
                  "name": "manage-realm",
                  "description": "${role_manage-realm}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "a3216962-3ac2-4e78-8653-d4a5f8775ba7",
                  "name": "view-realm",
                  "description": "${role_view-realm}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "6ca67c59-9eef-49ca-9239-8d85c89027a8",
                  "name": "impersonation",
                  "description": "${role_impersonation}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "487ba1bc-60f4-4f8d-bd6e-7360b34ab6a4",
                  "name": "manage-authorization",
                  "description": "${role_manage-authorization}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "6600a6b7-1a25-4270-8c10-7b17169445f4",
                  "name": "create-client",
                  "description": "${role_create-client}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "d944c7b0-3265-4536-ae64-e1fca1b1b721",
                  "name": "query-users",
                  "description": "${role_query-users}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "3d1edd1b-2bfe-408a-b420-466c38d59e2d",
                  "name": "query-clients",
                  "description": "${role_query-clients}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "9fb94878-047d-4c9d-b401-0639862e8b16",
                  "name": "manage-users",
                  "description": "${role_manage-users}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "ba7894fb-6a56-448a-9b2f-91302dc24705",
                  "name": "query-groups",
                  "description": "${role_query-groups}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "dd509faa-1d90-4c62-96f6-aeeea63c8ac4",
                  "name": "realm-admin",
                  "description": "${role_realm-admin}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "realm-management": [
                        "view-users",
                        "manage-events",
                        "manage-realm",
                        "view-realm",
                        "manage-authorization",
                        "impersonation",
                        "create-client",
                        "query-users",
                        "query-clients",
                        "manage-users",
                        "query-groups",
                        "view-clients",
                        "view-identity-providers",
                        "manage-clients",
                        "manage-identity-providers",
                        "view-events",
                        "view-authorization",
                        "query-realms"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "a73d7beb-3d71-4ae9-a2ac-27f672aed2b4",
                  "name": "view-clients",
                  "description": "${role_view-clients}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "realm-management": [
                        "query-clients"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "a611489b-f468-4530-b602-39a955e2c8b2",
                  "name": "view-identity-providers",
                  "description": "${role_view-identity-providers}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "13e10028-ac44-425c-873d-3142b51550e2",
                  "name": "manage-clients",
                  "description": "${role_manage-clients}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "d986b3f2-a1b0-4aca-9162-37e328742ee3",
                  "name": "manage-identity-providers",
                  "description": "${role_manage-identity-providers}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "dbf60741-8309-435c-954b-3be5cc0ccd63",
                  "name": "view-authorization",
                  "description": "${role_view-authorization}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "8cd8096e-7370-4a1d-9921-8ec328db9756",
                  "name": "view-events",
                  "description": "${role_view-events}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                },
                {
                  "id": "8e0336d7-2ab7-4b9f-b2ef-7f15411ca7d8",
                  "name": "query-realms",
                  "description": "${role_query-realms}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "68209b73-5107-4585-8d65-047670f69be8",
                  "attributes": {}
                }
              ],
              "obsrv-console": [],
              "security-admin-console": [],
              "admin-cli": [],
              "obsrv-grafana": [],
              "account-console": [],
              "broker": [
                {
                  "id": "b9d37cf1-ae4c-4009-900d-9333ea726ad3",
                  "name": "read-token",
                  "description": "${role_read-token}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "c644a0bd-474b-44d0-97ba-f1dc37d89dca",
                  "attributes": {}
                }
              ],
              "obsrv-superset": [],
              "account": [
                {
                  "id": "91e6ea2c-cd8f-4048-b7d0-63b2aaa7c0ae",
                  "name": "manage-account-links",
                  "description": "${role_manage-account-links}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                },
                {
                  "id": "3ae2d29f-ce39-4184-a3d9-37d1b288a79d",
                  "name": "view-groups",
                  "description": "${role_view-groups}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                },
                {
                  "id": "6b51112a-5079-4e10-b53b-da29fefb0953",
                  "name": "manage-consent",
                  "description": "${role_manage-consent}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "account": [
                        "view-consent"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                },
                {
                  "id": "98faad0d-52dc-4698-b049-f7423a214b72",
                  "name": "delete-account",
                  "description": "${role_delete-account}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                },
                {
                  "id": "fb1c46c3-cd23-4ae5-9b3b-e270cf7576b5",
                  "name": "view-applications",
                  "description": "${role_view-applications}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                },
                {
                  "id": "c53a821a-da55-476c-b96a-2b727e3cd201",
                  "name": "manage-account",
                  "description": "${role_manage-account}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "account": [
                        "manage-account-links"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                },
                {
                  "id": "056cab10-02e9-419a-a3b0-a201935d021b",
                  "name": "view-profile",
                  "description": "${role_view-profile}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                },
                {
                  "id": "59fda378-fbaf-44cb-9798-8ec36ea376a6",
                  "name": "view-consent",
                  "description": "${role_view-consent}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
                  "attributes": {}
                }
              ]
            }
          },
          "groups": [],
          "defaultRole": {
            "id": "9159a352-e046-4f5f-b83c-73b303839cf6",
            "name": "default-roles-obsrv-web-console",
            "description": "${role_default-roles}",
            "composite": true,
            "clientRole": false,
            "containerId": "78b14577-d627-476d-b308-217929a6ae0f"
          },
          "requiredCredentials": [
            "password"
          ],
          "otpPolicyType": "totp",
          "otpPolicyAlgorithm": "HmacSHA1",
          "otpPolicyInitialCounter": 0,
          "otpPolicyDigits": 6,
          "otpPolicyLookAheadWindow": 1,
          "otpPolicyPeriod": 30,
          "otpPolicyCodeReusable": false,
          "otpSupportedApplications": [
            "totpAppFreeOTPName",
            "totpAppGoogleName",
            "totpAppMicrosoftAuthenticatorName"
          ],
          "localizationTexts": {},
          "webAuthnPolicyRpEntityName": "keycloak",
          "webAuthnPolicySignatureAlgorithms": [
            "ES256"
          ],
          "webAuthnPolicyRpId": "",
          "webAuthnPolicyAttestationConveyancePreference": "not specified",
          "webAuthnPolicyAuthenticatorAttachment": "not specified",
          "webAuthnPolicyRequireResidentKey": "not specified",
          "webAuthnPolicyUserVerificationRequirement": "not specified",
          "webAuthnPolicyCreateTimeout": 0,
          "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
          "webAuthnPolicyAcceptableAaguids": [],
          "webAuthnPolicyExtraOrigins": [],
          "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
          "webAuthnPolicyPasswordlessSignatureAlgorithms": [
            "ES256"
          ],
          "webAuthnPolicyPasswordlessRpId": "",
          "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
          "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
          "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
          "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
          "webAuthnPolicyPasswordlessCreateTimeout": 0,
          "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
          "webAuthnPolicyPasswordlessAcceptableAaguids": [],
          "webAuthnPolicyPasswordlessExtraOrigins": [],
          "scopeMappings": [
            {
              "clientScope": "offline_access",
              "roles": [
                "offline_access"
              ]
            }
          ],
          "clientScopeMappings": {
            "account": [
              {
                "client": "account-console",
                "roles": [
                  "manage-account",
                  "view-groups"
                ]
              }
            ]
          },
          "clients": [
            {
              "id": "7ac77804-38fc-4f71-b198-b93a9d29fa4c",
              "clientId": "account",
              "name": "${client_account}",
              "rootUrl": "${authBaseUrl}",
              "baseUrl": "/realms/obsrv/account/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/realm/obsrv/account/*"
              ],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "ea11391b-a26c-4af5-8064-4b5ba1f96acc",
              "clientId": "account-console",
              "name": "${client_account-console}",
              "rootUrl": "${authBaseUrl}",
              "baseUrl": "/realms/obsrv/account/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/realms/obsrv/account/*"
              ],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "protocolMappers": [
                {
                  "id": "6013b21e-d76e-4cd0-925a-3f365a06bde6",
                  "name": "audience resolve",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-audience-resolve-mapper",
                  "consentRequired": false,
                  "config": {}
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "05b5c5e1-13fe-4bb8-b8a2-580bebf41107",
              "clientId": "admin-cli",
              "name": "${client_admin-cli}",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": false,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": true,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "c644a0bd-474b-44d0-97ba-f1dc37d89dca",
              "clientId": "broker",
              "name": "${client_broker}",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": true,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": false,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "true",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "37d65a90-ae57-40bd-b15c-2d76dd1acaea",
              "clientId": "{{ .Values.global.oauth_configs.web_console_client_id }}",
              "name": "Obsrv Console",
              "description": "",
              "rootUrl": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}",
              "adminUrl": "",
              "baseUrl": "",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "",
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/*",
                "http://{{ .Values.global.domain }}/*",
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/console",
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/console?auth_callback=1"
              ],
              "webOrigins": [
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/*",
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/console",
                "*"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": true,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": true,
              "protocol": "openid-connect",
              "attributes": {
                "client.introspection.response.allow.jwt.claim.enabled": "false",
                "login_theme": "keycloak",
                "post.logout.redirect.uris": "+##http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/*##http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/console##*http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/console/*##http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}##,http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/auth",
                "oauth2.device.authorization.grant.enabled": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "use.refresh.tokens": "true",
                "exclude.session.state.from.auth.response": "true",
                "realm_client": "false",
                "oidc.ciba.grant.enabled": "false",
                "client.use.lightweight.access.token.enabled": "false",
                "exclude.issuer.from.auth.response": "true",
                "backchannel.logout.session.required": "true",
                "client_credentials.use_refresh_token": "false",
                "acr.loa.map": "{}",
                "require.pushed.authorization.requests": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "display.on.consent.screen": "false",
                "token.response.type.bearer.lower-case": "false"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": -1,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "43317ab1-c6be-4540-8822-cd561673844c",
              "clientId": "{{ .Values.global.oauth_configs.grafana_client_id }}",
              "name": "Obsrv Grafana",
              "description": "",
              "rootUrl": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/grafana",
              "adminUrl": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/grafana",
              "baseUrl": "",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "secret": "{{ .Values.global.oauth_configs.grafana_client_secret }}",
              "redirectUris": [
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/grafana/login/generic_oauth"
              ],
              "webOrigins": [
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/grafana"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": true,
              "serviceAccountsEnabled": false,
              "publicClient": false,
              "frontchannelLogout": true,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1737970791",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/grafana",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": -1,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "81c087e8-0683-41e6-a171-0242dcbce71c",
              "clientId": "{{ .Values.global.oauth_configs.superset_client_id }}",
              "name": "Obsrv Superset",
              "description": "",
              "rootUrl": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}",
              "adminUrl": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}",
              "baseUrl": "",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "secret": "{{ .Values.global.oauth_configs.superset_client_secret }}",
              "redirectUris": [
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/oauth-authorized/obsrv"
              ],
              "webOrigins": [
                "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": true,
              "serviceAccountsEnabled": false,
              "publicClient": false,
              "frontchannelLogout": true,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1737971597",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "use.jwks.url": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": -1,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "68209b73-5107-4585-8d65-047670f69be8",
              "clientId": "realm-management",
              "name": "${client_realm-management}",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": true,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": false,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "true",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            },
            {
              "id": "91d5d6c1-37d6-46dc-9b04-22eb6ab26eb5",
              "clientId": "security-admin-console",
              "name": "${client_security-admin-console}",
              "rootUrl": "${authAdminUrl}",
              "baseUrl": "/admin/obsrv/console/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/admin/obsrv/console/*"
              ],
              "webOrigins": [
                "+"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": 0,
              "protocolMappers": [
                {
                  "id": "1dd2bf87-95f8-410a-b921-8ae6d65f36b7",
                  "name": "locale",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "locale",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "locale",
                    "jsonType.label": "String"
                  }
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ]
            }
          ],
          "clientScopes": [
            {
              "id": "e7bcd94d-36bb-4f8f-9bfa-3704237749f6",
              "name": "role_list",
              "description": "SAML role list",
              "protocol": "saml",
              "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "4cb0afd5-4df3-4b64-b3b2-d82ab61be3e6",
                  "name": "role list",
                  "protocol": "saml",
                  "protocolMapper": "saml-role-list-mapper",
                  "consentRequired": false,
                  "config": {
                    "single": "false",
                    "attribute.nameformat": "Basic",
                    "attribute.name": "Role"
                  }
                }
              ]
            },
            {
              "id": "e7da242e-d7e5-4d97-8efc-0dfb60e7f7f9",
              "name": "address",
              "description": "OpenID Connect built-in scope: address",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${addressScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "1a455444-02f6-4440-b785-0412cfd9f5ef",
                  "name": "address",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-address-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.attribute.formatted": "formatted",
                    "user.attribute.country": "country",
                    "introspection.token.claim": "true",
                    "user.attribute.postal_code": "postal_code",
                    "userinfo.token.claim": "true",
                    "user.attribute.street": "street",
                    "id.token.claim": "true",
                    "user.attribute.region": "region",
                    "access.token.claim": "true",
                    "user.attribute.locality": "locality"
                  }
                }
              ]
            },
            {
              "id": "5d8257ed-5584-4954-924d-8f902a4e747f",
              "name": "phone",
              "description": "OpenID Connect built-in scope: phone",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${phoneScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "5e3389f7-09ee-41d9-9935-e57d97d8334f",
                  "name": "phone number",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "phoneNumber",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "phone_number",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "2c6c647e-f206-4c6f-b955-b9966fa1ff77",
                  "name": "phone number verified",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "phoneNumberVerified",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "phone_number_verified",
                    "jsonType.label": "boolean"
                  }
                }
              ]
            },
            {
              "id": "29ef1cc6-ad1c-4b36-a223-9f288a6f645f",
              "name": "offline_access",
              "description": "OpenID Connect built-in scope: offline_access",
              "protocol": "openid-connect",
              "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
              }
            },
            {
              "id": "623b9cad-e74d-4d3e-a09a-ecbfcfa539da",
              "name": "email",
              "description": "OpenID Connect built-in scope: email",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${emailScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "b3aff063-def1-491f-96b5-c80bb3ec9203",
                  "name": "email",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "email",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "email",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "54dbf931-3e20-4ffa-93c4-111a4c32466a",
                  "name": "email verified",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-property-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "emailVerified",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "email_verified",
                    "jsonType.label": "boolean"
                  }
                }
              ]
            },
            {
              "id": "c1024427-cf4b-4cdf-8201-b21c320cd1ee",
              "name": "roles",
              "description": "OpenID Connect scope for add user roles to the access token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "${rolesScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "69ba9583-1b10-435c-85c6-a7b60361449e",
                  "name": "client roles",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-client-role-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.attribute": "foo",
                    "introspection.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "resource_access.${client_id}.roles",
                    "jsonType.label": "String",
                    "multivalued": "true"
                  }
                },
                {
                  "id": "f52c6da8-63c4-48bf-9f06-c32e84b0df5b",
                  "name": "audience resolve",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-audience-resolve-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "access.token.claim": "true"
                  }
                },
                {
                  "id": "1acb9bba-f50d-468e-b8dc-6b3505e61889",
                  "name": "realm roles",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-realm-role-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.attribute": "foo",
                    "introspection.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "realm_access.roles",
                    "jsonType.label": "String",
                    "multivalued": "true"
                  }
                }
              ]
            },
            {
              "id": "caf1ddcc-a86e-482e-ae96-b078b0bfcf8b",
              "name": "web-origins",
              "description": "OpenID Connect scope for add allowed web origins to the access token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "3c89d4de-ee9e-4946-a80c-9e3bd7c5c13d",
                  "name": "allowed web origins",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-allowed-origins-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "access.token.claim": "true"
                  }
                }
              ]
            },
            {
              "id": "6a930ef7-2e64-450e-97a5-353db342ee63",
              "name": "microprofile-jwt",
              "description": "Microprofile - JWT built-in scope",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "f0b58521-b070-44e3-a92a-f52c34eecacf",
                  "name": "upn",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "username",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "upn",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "01248ac9-3e93-4ac6-a929-ccdc1faee9da",
                  "name": "groups",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-realm-role-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "multivalued": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "foo",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "groups",
                    "jsonType.label": "String"
                  }
                }
              ]
            },
            {
              "id": "77ca3ded-7d42-43a2-911e-9f886dc1f086",
              "name": "acr",
              "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "d80f92ba-52f4-4333-b119-eab39e19cdea",
                  "name": "acr loa level",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-acr-mapper",
                  "consentRequired": false,
                  "config": {
                    "id.token.claim": "true",
                    "introspection.token.claim": "true",
                    "access.token.claim": "true",
                    "userinfo.token.claim": "true"
                  }
                }
              ]
            },
            {
              "id": "ef5da1a0-1b11-4176-ad05-28065bef4b08",
              "name": "saml_organization",
              "description": "Organization Membership",
              "protocol": "saml",
              "attributes": {
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "1f447e59-ef72-4fa2-97e4-13a3a92148d2",
                  "name": "organization",
                  "protocol": "saml",
                  "protocolMapper": "saml-organization-membership-mapper",
                  "consentRequired": false,
                  "config": {}
                }
              ]
            },
            {
              "id": "e69ec31c-6558-4d6c-b2fb-4e0f94981fb6",
              "name": "organization",
              "description": "Additional claims about the organization a subject belongs to",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${organizationScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "d39a3fce-501a-49a4-84d7-31a67b53247d",
                  "name": "organization",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-organization-membership-mapper",
                  "consentRequired": false,
                  "config": {
                    "id.token.claim": "true",
                    "introspection.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "organization",
                    "jsonType.label": "String",
                    "multivalued": "true"
                  }
                }
              ]
            },
            {
              "id": "6929bd4c-5f9a-4bc9-9bae-45e43bd6f8e1",
              "name": "profile",
              "description": "OpenID Connect built-in scope: profile",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${profileScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "41404deb-7234-4132-a082-5a53e7a52605",
                  "name": "middle name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "middleName",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "middle_name",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "dce4cdb3-fd67-4f10-943b-b6f0dad6a361",
                  "name": "zoneinfo",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "zoneinfo",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "zoneinfo",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "6fe58912-34c2-4d8a-b55d-2726aa77b8f6",
                  "name": "profile",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "profile",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "profile",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "41445bfc-5f15-4fd0-b91d-fc72eaaa3f65",
                  "name": "full name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-full-name-mapper",
                  "consentRequired": false,
                  "config": {
                    "id.token.claim": "true",
                    "introspection.token.claim": "true",
                    "access.token.claim": "true",
                    "userinfo.token.claim": "true"
                  }
                },
                {
                  "id": "1f105ade-9e49-4932-82ff-f44b0df12906",
                  "name": "nickname",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "nickname",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "nickname",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "15e7e110-e92b-4815-8939-5105fcb4090d",
                  "name": "locale",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "locale",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "locale",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "4a82e1eb-9128-4f33-8c3a-5e35c3b799e2",
                  "name": "gender",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "gender",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "gender",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "72f7dbdd-0742-421f-8ddb-789949d47ece",
                  "name": "website",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "website",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "website",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "fd4d224a-41ae-42aa-9bc4-97bd02aa27c7",
                  "name": "birthdate",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "birthdate",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "birthdate",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "2932d652-b870-45b6-960a-504ec014985c",
                  "name": "family name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "lastName",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "family_name",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "0f387d6a-5307-4d76-981b-1fd0b08a01ea",
                  "name": "picture",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "picture",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "picture",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "d2969e98-bee5-481f-8db8-ba0eabfa2e44",
                  "name": "given name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "firstName",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "given_name",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "a165ee80-5428-40a4-9968-a415b32c6107",
                  "name": "username",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "username",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "preferred_username",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "3f21c3d2-d06b-4426-abbe-cf238aea81f8",
                  "name": "updated at",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "updatedAt",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "updated_at",
                    "jsonType.label": "long"
                  }
                }
              ]
            },
            {
              "id": "05b480b4-2459-44bf-9a24-cf2744df5f8e",
              "name": "basic",
              "description": "OpenID Connect scope for add all basic claims to the token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "45180568-d3c4-4e1a-87ae-719588416096",
                  "name": "sub",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-sub-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "access.token.claim": "true"
                  }
                },
                {
                  "id": "95dbcc92-2d48-48a0-9db9-8af99c9cec34",
                  "name": "auth_time",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "AUTH_TIME",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "auth_time",
                    "jsonType.label": "long"
                  }
                }
              ]
            }
          ],
          "defaultDefaultClientScopes": [
            "role_list",
            "profile",
            "email",
            "roles",
            "web-origins",
            "acr",
            "basic"
          ],
          "defaultOptionalClientScopes": [
            "offline_access",
            "address",
            "phone",
            "microprofile-jwt"
          ],
          "browserSecurityHeaders": {
            "contentSecurityPolicyReportOnly": "",
            "xContentTypeOptions": "nosniff",
            "referrerPolicy": "no-referrer",
            "xRobotsTag": "none",
            "xFrameOptions": "SAMEORIGIN",
            "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
            "xXSSProtection": "1; mode=block",
            "strictTransportSecurity": "max-age=31536000; includeSubDomains"
          },
          "smtpServer": {},
          "eventsEnabled": false,
          "eventsListeners": [
            "jboss-logging"
          ],
          "enabledEventTypes": [],
          "adminEventsEnabled": false,
          "adminEventsDetailsEnabled": false,
          "identityProviders": [],
          "identityProviderMappers": [],
          "components": {
            "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
              {
                "id": "64e1bc1f-0b47-484a-9d6e-399f446cfbba",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "allow-default-scopes": [
                    "true"
                  ]
                }
              },
              {
                "id": "5b15e878-6cc1-4271-b966-289d2a50d735",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                  "allow-default-scopes": [
                    "true"
                  ]
                }
              },
              {
                "id": "448b1d5a-f19b-47ba-8b7f-d2b306b4f9ec",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
              },
              {
                "id": "43461e22-d58c-4971-9261-4f4e9abcc3ea",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
              },
              {
                "id": "132021bc-896e-4a10-9141-56df8988fe2d",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                  "allowed-protocol-mapper-types": [
                    "saml-user-property-mapper",
                    "oidc-address-mapper",
                    "saml-user-attribute-mapper",
                    "oidc-full-name-mapper",
                    "saml-role-list-mapper",
                    "oidc-sha256-pairwise-sub-mapper",
                    "oidc-usermodel-attribute-mapper",
                    "oidc-usermodel-property-mapper"
                  ]
                }
              },
              {
                "id": "e928e721-3580-4691-9168-9f3c7d90b2fd",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "host-sending-registration-request-must-match": [
                    "true"
                  ],
                  "client-uris-must-match": [
                    "true"
                  ]
                }
              },
              {
                "id": "58a1c219-a947-4d51-955e-3e90457d5775",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "max-clients": [
                    "200"
                  ]
                }
              },
              {
                "id": "8bae4951-e77d-434e-b86e-dce3221aecbd",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "allowed-protocol-mapper-types": [
                    "oidc-usermodel-property-mapper",
                    "saml-role-list-mapper",
                    "oidc-address-mapper",
                    "oidc-sha256-pairwise-sub-mapper",
                    "saml-user-attribute-mapper",
                    "oidc-full-name-mapper",
                    "oidc-usermodel-attribute-mapper",
                    "saml-user-property-mapper"
                  ]
                }
              }
            ],
            "org.keycloak.userprofile.UserProfileProvider": [
              {
                "id": "be12d775-c633-4673-ae64-167aed3fd64d",
                "providerId": "declarative-user-profile",
                "subComponents": {},
                "config": {
                  "kc.user.profile.config": [
                    "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"annotations\":{},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"annotations\":{},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
                  ]
                }
              }
            ],
            "org.keycloak.keys.KeyProvider": [
              {
                "id": "5479d9bc-5a60-420d-b748-b2fd002b58a8",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ]
                }
              },
              {
                "id": "e6388ba6-418e-45db-96b1-dccbfe6df246",
                "name": "hmac-generated-hs512",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ],
                  "algorithm": [
                    "HS512"
                  ]
                }
              },
              {
                "id": "55cc8d48-411d-493b-8173-03f19ef502ff",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ]
                }
              },
              {
                "id": "215daf7d-d112-48a6-b3af-90562f7410a7",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ],
                  "algorithm": [
                    "RSA-OAEP"
                  ]
                }
              }
            ]
          },
          "internationalizationEnabled": false,
          "supportedLocales": [],
          "authenticationFlows": [
            {
              "id": "f8b81df6-9f72-4976-b5f2-bd247a81ebe6",
              "alias": "Account verification options",
              "description": "Method with which to verity the existing account",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "idp-email-verification",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Verify Existing Account by Re-authentication",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "9b992c08-4945-4ab6-adc0-d9187ba63158",
              "alias": "Browser - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "auth-otp-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "76b37633-610a-4656-ae2e-5796480e5577",
              "alias": "Browser - Conditional Organization",
              "description": "Flow to determine if the organization identity-first login is to be used",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "organization",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "ec72c4d0-8b98-4c47-bdb8-f6250239a5bf",
              "alias": "Direct Grant - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "direct-grant-validate-otp",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "6089e8d9-603a-4010-9dd7-c07696a88394",
              "alias": "First Broker Login - Conditional Organization",
              "description": "Flow to determine if the authenticator that adds organization members is to be used",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "idp-add-organization-member",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "8fbe061b-af38-4105-89cc-6bf4c7e9f135",
              "alias": "First broker login - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "auth-otp-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "7323e6cd-8a47-4aaa-b488-22a842948ac7",
              "alias": "Handle Existing Account",
              "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "idp-confirm-link",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Account verification options",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "bc5ae9e0-b6ca-4537-a713-4e9f7a7f4510",
              "alias": "Organization",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 10,
                  "autheticatorFlow": true,
                  "flowAlias": "Browser - Conditional Organization",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "d45b6dd2-9c40-4c70-80ed-ac7646095b97",
              "alias": "Reset - Conditional OTP",
              "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "reset-otp",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "a8b6f593-95c0-4e97-afdd-086c9a1787b1",
              "alias": "User creation or linking",
              "description": "Flow for the existing/non-existing user alternatives",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticatorConfig": "create unique user config",
                  "authenticator": "idp-create-user-if-unique",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Handle Existing Account",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "893cef23-6077-408e-bb3c-3f8fa5dc76f9",
              "alias": "Verify Existing Account by Re-authentication",
              "description": "Reauthentication of existing account",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "idp-username-password-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "First broker login - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "96f79e72-d0cb-4571-af52-3fcc84f6f0e1",
              "alias": "browser",
              "description": "browser based authentication",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "auth-cookie",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "auth-spnego",
                  "authenticatorFlow": false,
                  "requirement": "DISABLED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "identity-provider-redirector",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 25,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 26,
                  "autheticatorFlow": true,
                  "flowAlias": "Organization",
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 30,
                  "autheticatorFlow": true,
                  "flowAlias": "forms",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "0bd7fb17-c1d4-4cfc-9ed4-35057118db5a",
              "alias": "clients",
              "description": "Base authentication for clients",
              "providerId": "client-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "client-secret",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "client-jwt",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "client-secret-jwt",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 30,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "client-x509",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 40,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "0498945d-ad09-4c7a-8bce-4e42ed3273a2",
              "alias": "direct grant",
              "description": "OpenID Connect Resource Owner Grant",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "direct-grant-validate-username",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "direct-grant-validate-password",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 30,
                  "autheticatorFlow": true,
                  "flowAlias": "Direct Grant - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "f6b7251f-2ce7-4511-bc44-a15e64965be8",
              "alias": "docker auth",
              "description": "Used by Docker clients to authenticate against the IDP",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "docker-http-basic-authenticator",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "9a16d1a8-879f-424b-82b0-ec24a590de79",
              "alias": "first broker login",
              "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticatorConfig": "review profile config",
                  "authenticator": "idp-review-profile",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "User creation or linking",
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 50,
                  "autheticatorFlow": true,
                  "flowAlias": "First Broker Login - Conditional Organization",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "f1b9487a-3394-428b-945d-4a5a0446bc09",
              "alias": "forms",
              "description": "Username, password, otp and other auth forms.",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "auth-username-password-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Browser - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "226efa09-5a0c-48ed-bcef-ece664fdf972",
              "alias": "registration",
              "description": "registration flow",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "registration-page-form",
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": true,
                  "flowAlias": "registration form",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "3832e871-48d5-4f02-9404-1cafb94b1838",
              "alias": "registration form",
              "description": "registration form",
              "providerId": "form-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "registration-user-creation",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "registration-password-action",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 50,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "registration-recaptcha-action",
                  "authenticatorFlow": false,
                  "requirement": "DISABLED",
                  "priority": 60,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "registration-terms-and-conditions",
                  "authenticatorFlow": false,
                  "requirement": "DISABLED",
                  "priority": 70,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "0b62b39c-4f4a-499a-a9e5-2402296d2c5a",
              "alias": "reset credentials",
              "description": "Reset credentials for a user if they forgot their password or something",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "reset-credentials-choose-user",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "reset-credential-email",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "reset-password",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 30,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 40,
                  "autheticatorFlow": true,
                  "flowAlias": "Reset - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "1bbc98b2-5704-4dd8-86b9-908335855b19",
              "alias": "saml ecp",
              "description": "SAML ECP Profile Authentication Flow",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "http-basic-authenticator",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            }
          ],
          "authenticatorConfig": [
            {
              "id": "6da631ec-3a4a-4a2a-935f-e261fab1ed74",
              "alias": "create unique user config",
              "config": {
                "require.password.update.after.registration": "false"
              }
            },
            {
              "id": "11d4291f-6272-4a65-8aa8-e0eed19c6e04",
              "alias": "review profile config",
              "config": {
                "update.profile.on.first.login": "missing"
              }
            }
          ],
          "requiredActions": [
            {
              "alias": "CONFIGURE_TOTP",
              "name": "Configure OTP",
              "providerId": "CONFIGURE_TOTP",
              "enabled": true,
              "defaultAction": false,
              "priority": 10,
              "config": {}
            },
            {
              "alias": "TERMS_AND_CONDITIONS",
              "name": "Terms and Conditions",
              "providerId": "TERMS_AND_CONDITIONS",
              "enabled": false,
              "defaultAction": false,
              "priority": 20,
              "config": {}
            },
            {
              "alias": "UPDATE_PASSWORD",
              "name": "Update Password",
              "providerId": "UPDATE_PASSWORD",
              "enabled": true,
              "defaultAction": false,
              "priority": 30,
              "config": {}
            },
            {
              "alias": "UPDATE_PROFILE",
              "name": "Update Profile",
              "providerId": "UPDATE_PROFILE",
              "enabled": true,
              "defaultAction": false,
              "priority": 40,
              "config": {}
            },
            {
              "alias": "VERIFY_EMAIL",
              "name": "Verify Email",
              "providerId": "VERIFY_EMAIL",
              "enabled": true,
              "defaultAction": false,
              "priority": 50,
              "config": {}
            },
            {
              "alias": "delete_account",
              "name": "Delete Account",
              "providerId": "delete_account",
              "enabled": false,
              "defaultAction": false,
              "priority": 60,
              "config": {}
            },
            {
              "alias": "webauthn-register",
              "name": "Webauthn Register",
              "providerId": "webauthn-register",
              "enabled": true,
              "defaultAction": false,
              "priority": 70,
              "config": {}
            },
            {
              "alias": "webauthn-register-passwordless",
              "name": "Webauthn Register Passwordless",
              "providerId": "webauthn-register-passwordless",
              "enabled": true,
              "defaultAction": false,
              "priority": 80,
              "config": {}
            },
            {
              "alias": "VERIFY_PROFILE",
              "name": "Verify Profile",
              "providerId": "VERIFY_PROFILE",
              "enabled": true,
              "defaultAction": false,
              "priority": 90,
              "config": {}
            },
            {
              "alias": "delete_credential",
              "name": "Delete Credential",
              "providerId": "delete_credential",
              "enabled": true,
              "defaultAction": false,
              "priority": 100,
              "config": {}
            },
            {
              "alias": "update_user_locale",
              "name": "Update User Locale",
              "providerId": "update_user_locale",
              "enabled": true,
              "defaultAction": false,
              "priority": 1000,
              "config": {}
            }
          ],
          "browserFlow": "browser",
          "registrationFlow": "registration",
          "directGrantFlow": "direct grant",
          "resetCredentialsFlow": "reset credentials",
          "clientAuthenticationFlow": "clients",
          "dockerAuthenticationFlow": "docker auth",
          "firstBrokerLoginFlow": "first broker login",
          "attributes": {
            "cibaBackchannelTokenDeliveryMode": "poll",
            "de.adorsys.keycloak.config.import-checksum-default": "176ecf7e2c1734b3ef436812fa1986045bdb5e24684bf682d399a3e8fe4f3d1c",
            "clientOfflineSessionIdleTimeout": "0",
            "de.adorsys.keycloak.config.state-default-roles-client-realm-management-0": "[\"manage-users\",\"impersonation\",\"view-events\",\"manage-realm\",\"manage-authorization\",\"query-clients\",\"query-realms\",\"view-authorization\",\"manage-identity-providers\",\"query-groups\",\"view-clients\",\"view-users\",\"realm-admin\",\"create-client\",\"view-realm\",",
            "de.adorsys.keycloak.config.state-default-roles-client-realm-management-1": "\"manage-clients\",\"manage-events\",\"view-identity-providers\",\"query-users\"]",
            "cibaExpiresIn": "120",
            "de.adorsys.keycloak.config.state-default-roles-client-admin-cli-0": "[]",
            "de.adorsys.keycloak.config.state-default-roles-client-security-admin-console-0": "[]",
            "frontendUrl": "http{{ if .Values.global.ssl_enabled }}s{{ end }}://{{ .Values.global.domain }}/auth",
            "organizationsEnabled": "false",
            "de.adorsys.keycloak.config.state-default-components-1": "12\",\"aes-generated\"]",
            "de.adorsys.keycloak.config.state-default-components-0": "[\"Allowed Client Scopes\",\"Consent Required\",\"Full Scope Disabled\",\"Allowed Client Scopes\",\"Max Clients Limit\",\"Allowed Protocol Mapper Types\",\"Trusted Hosts\",\"Allowed Protocol Mapper Types\",null,\"rsa-enc-generated\",\"rsa-generated\",\"hmac-generated-hs5",
            "cibaAuthRequestedUserHint": "login_hint",
            "de.adorsys.keycloak.config.state-default-roles-client-webConsole-0": "[]",
            "de.adorsys.keycloak.config.state-default-roles-client-broker-0": "[\"read-token\"]",
            "clientOfflineSessionMaxLifespan": "0",
            "oauth2DevicePollingInterval": "5",
            "clientSessionIdleTimeout": "0",
            "de.adorsys.keycloak.config.state-default-roles-realm-0": "[\"default-roles-obsrv-web-console\",\"offline_access\",\"uma_authorization\"]",
            "cibaInterval": "5",
            "realmReusableOtpCode": "false",
            "oauth2DeviceCodeLifespan": "600",
            "de.adorsys.keycloak.config.state-default-required-actions-0": "[\"CONFIGURE_TOTP\",\"TERMS_AND_CONDITIONS\",\"UPDATE_PASSWORD\",\"UPDATE_PROFILE\",\"VERIFY_EMAIL\",\"delete_account\",\"webauthn-register\",\"webauthn-register-passwordless\",\"VERIFY_PROFILE\",\"delete_credential\",\"update_user_locale\"]",
            "parRequestUriLifespan": "60",
            "clientSessionMaxLifespan": "0",
            "acr.loa.map": "{}",
            "de.adorsys.keycloak.config.state-default-clients-0": "[\"account\",\"account-console\",\"admin-cli\",\"broker\",\"realm-management\",\"security-admin-console\",\"webConsole\"]",
            "de.adorsys.keycloak.config.state-default-roles-client-account-0": "[\"view-applications\",\"manage-consent\",\"manage-account-links\",\"view-groups\",\"view-consent\",\"view-profile\",\"delete-account\",\"manage-account\"]"
          },
          "keycloakVersion": "26.0.5",
          "userManagedAccessAllowed": false,
          "organizationsEnabled": false,
          "clientProfiles": {
            "profiles": []
          },
          "clientPolicies": {
            "policies": []
          }
        }
kong:
  fullnameOverride: kong

kube-prometheus-stack:
  alertmanager:
    alertmanagerSpec:
      podLabels:
        system.monitoring: "true"
      resources:
        limits:
          cpu: "0.1"
          memory: 256Mi
        requests:
          cpu: "0.1"
          memory: 128Mi
  commonLabels:
    system.monitoring: "true"
  grafana:
    alerting:
      api.yaml:
        file: alerting/api.yaml
      infra.yaml:
        file: alerting/infra.yaml
      ingestion.yaml:
        file: alerting/ingestion.yaml
      node.yaml:
        file: alerting/node.yaml
      processing.yaml:
        file: alerting/processing.yaml
      storage.yaml:
        file: alerting/storage.yaml
    env:
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: obsrv
    extraLabels:
      system.monitoring: "true"
    namespaceOverride: monitoring
    persistence:
      enabled: true
      size: 1Gi
    podLabels:
      system.monitoring: "true"
    resources:
      limits:
        cpu: 0.2
        memory: 256Mi
      requests:
        cpu: "0.1"
        memory: 128Mi
    # adminPassword: prom-operator
    service:
      enabled: true
      portName: http-web
      type: ClusterIP
    serviceMonitor:
      enabled: true
      interval: ""
  kube-state-metrics:
    customLabels:
      system.monitoring: "true"
    metricLabelsAllowlist:
      - pods=[*]
      - deployments=[*]
      - statefulsets=[*]
      - persistentvolumeclaims=[*]
      - persistentvolumes=[*]
    namespaceOverride: monitoring
    prometheus:
      monitor:
        enabled: true
        honorLabels: true
    releaseLabel: true
    resources:
      limits:
        cpu: "0.1"
        memory: 256Mi
      requests:
        cpu: "0.1"
        memory: 128Mi
    selfMonitor:
      enabled: false
  namespaceOverride: monitoring
  prometheus:
    commonMetaLabels:
      system.monitoring: "true"
    prometheusSpec:
      additionalScrapeConfigs:
        - job_name: s3-common-backups
          metrics_path: /probe
          relabel_configs:
            - regex: ^bucket=(.*);$
              replacement: ${1}
              source_labels:
                - __address__
              target_label: __param_bucket
            - replacement: s3-exporter.s3-exporter.svc.cluster.local:9340
              target_label: __address__
          scrape_interval: 5m
          scrape_timeout: 30s
          static_configs:
            - targets:
                - bucket={{ .Values.global.velero_backup_cloud_bucket}};
        - job_name: s3-backups
          metrics_path: /probe
          relabel_configs:
            - regex: ^bucket=(.*);prefix=(.*);$
              replacement: ${1}
              source_labels:
                - __address__
              target_label: __param_bucket
            - regex: ^bucket=(.*);prefix=(.*);$
              replacement: ${2}
              source_labels:
                - __address__
              target_label: __param_prefix
            - replacement: s3-exporter.s3-exporter.svc.cluster.local:9340 # S3 exporter.
              target_label: __address__
          scrape_interval: 5m
          scrape_timeout: 30s
          static_configs:
            - targets:
                - bucket={{ .Values.global.postgresql_backup_cloud_bucket }};prefix=postgresql
        - job_name: 'redis_exporter_targets'
          static_configs:
            - targets:
                - redis://valkey-denorm-headless.redis.svc.cluster.local:6379
                - redis://valkey-dedup-headless.redis.svc.cluster.local:6379
          metrics_path: /metrics
          relabel_configs:
            - source_labels: [__address__]
              regex: 'redis://valkey-denorm-headless.redis.svc.cluster.local:6379'
              target_label: __address__
              replacement: valkey-denorm-metrics.redis.svc.cluster.local:9121
            - source_labels: [__address__]
              regex: 'redis://valkey-dedup-headless.redis.svc.cluster.local:6379'
              target_label: __address__
              replacement: valkey-dedup-metrics.redis.svc.cluster.local:9121
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
        - job_name: 'pushgateway'
          scrape_interval: 15s
          static_configs:
            - targets: ['monitoring-prometheus-pushgateway.monitoring.svc.cluster.local:9091']



      retention: 90d
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
    server:
      resources:
        limits:
          cpu: 0.5
          memory: 512Mi
        requests:
          cpu: 0.5
          memory: 512Mi
  prometheus-node-exporter:
    extraArgs:
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
    fullnameOverride: node-exporter
    namespaceOverride: monitoring
    podLabels:
      jobLabel: node-exporter
      system.monitoring: "true"
    prometheus:
      monitor:
        enabled: true
        jobLabel: node-exporter
        proxyUrl: ""
        scrapeTimeout: ""
    rbac:
      pspEnabled: false
    releaseLabel: true
    resources:
      limits:
        cpu: "0.1"
        memory: 256Mi
      requests:
        cpu: "0.1"
        memory: 128Mi
    service:
      portName: http-metrics
  prometheusOperator:
    prometheusConfigReloader:
      resources:
        limits:
          cpu: "0.1"
          memory: 256Mi
        requests:
          cpu: "0.1"
          memory: 128Mi
    resources:
      limits:
        cpu: "0.1"
        memory: 256Mi
      requests:
        cpu: "0.1"
        memory: 128Mi

loki:
  chunksCache:
    enabled: false
  deploymentMode: SimpleScalable
  fullnameOverride: loki
  loki:
    auth_enabled: false
    commonConfig:
      replication_factor: 1
    compactor:
      compaction_interval: 10m
      delete_request_store: filesystem
      retention_delete_delay: 1h
      retention_delete_worker_count: 150
      retention_enabled: true
      working_directory: /var/loki/compactor
    fullNameOverride: loki
    nameOverride: loki
    namespace: loki
    schemaConfig:
      configs:
        - from: "2023-01-01"
          index:
            period: 24h
            prefix: index_
          object_store: s3
          schema: v13
          store: tsdb
    storage:
      type: s3
    storage_config:
      tsdb_shipper:
        active_index_directory: /var/loki/tsdb-index
        cache_location: /var/loki/tsdb-cache
        cache_ttl: 24h
  minio:
    enabled: true
    replicas: 1
    rootUser: loki-logs-admin
    rootPassword: NvCmV8L7ZPCLozNF30tcZKr9Q
  monitoring:
    dashboards:
      enabled: false
      namespace: monitoring
    fullnameOverride: loki
    lokiCanary:
      enabled: false
    nameOverride: loki
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
    serviceMonitor:
      metricsInstance:
        enabled: false
  nameOverride: loki
  read:
    replicas: 1
  resultsCache:
    enabled: false
  sidecar:
    rules:
      enabled: false
  singleBinary:
    replicas: 0
  test:
    enabled: false
  write:
    replicas: 1
  backend:
    replicas: 1

postgresql:
  fullnameOverride: postgresql

postgresql-exporter:
  fullnameOverride: postgresql-exporter

postgresql-migration:
  gf_auth_generic_oauth_client_id: 528806583-dev.oauth.obsrv.ai
  gf_auth_generic_oauth_client_secret: el642dcXd1P3v6i+hODnGrUKx9ZSWAlmXWZaEoZQI7/R3NUGQlLTnNCV
  kong_ingress_domain: '{{ .Values.global.domain }}'
  superset_oauth_client_secret: luXRJMh
  superset_oauth_clientid: 451058501-dev.oauth.obsrv.ai
  system_settings:
    dedup_period: 604800 # In seconds (7 days)
    default_dataset_id: ALL
    encryption_key: strong_encryption_key_to_encrypt
    max_event_size: 1048576
  web_console_login: admin@obsrv.in
  web_console_password: $2a$10$bG9R7ioA4/pfw8m0GPcWTOZMhc2sNN4wEkKV.j50RvQW5iUki/4Za

promitor-agent-scraper:
  fullnameOverride: azure-exporter

promtail:
  fullnameOverride: promtail
  podLabels:
    system.monitoring: "true"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  serviceMonitor:
    enabled: true
    labels:
      release: monitoring
      system.monitoring: "true"

spark:
  appdata:
    spark-defaults:
      conf: |+
        spark.master spark://spark-master-svc:7077
        spark.ui.prometheus.enabled true
        spark.executor.processTreeMetrics.enabled true
        spark.history.fs.logDirectory /opt/bitnami/spark/spark-metadata/spark-events
        spark.eventLog.enabled true
        spark.eventLog.dir /opt/bitnami/spark/spark-metadata/spark-events

  fullnameOverride: spark
  persistence:
    enabled: true
    masterMetadata:
      name: spark-master-metadata
      storage:
        size: 2Gi
    masterTmp:
      name: spark-master-tmp
      storage:
        size: 2Gi
    workerMetadata:
      name: spark-worker-metadata
      storage:
        size: 2Gi
    workerTmp:
      name: spark-worker-tmp
      storage:
        size: 2Gi
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: true
    enabled: true
    name: spark-sa

superset:
  fullnameOverride: superset

valkey-dedup:
  architecture: standalone
  auth:
    enabled: false
  commonConfiguration: |-
    # Enable AOF https://valkey.io/docs/topics/persistence.html
    # appendonly yes
    # Enable RDB persistence
    save 60 100
  commonLabels:
    system.processing: "true"
    system.storage: "true"
  primary:
    configuration: ""
    containerPorts:
      redis: 6379
    count: 1
    disableCommands:
      - FLUSHALL
    persistence:
      accessModes:
        - ReadWriteOnce
      enabled: true
      labels:
        system.processing: "true"
        system.storage: "true"
      path: /data
      size: 1Gi
      storageClass: ""
      subPath: ""
      subPathExpr: ""
    podLabels:
      system.processing: "true"
      system.storage: "true"

valkey-denorm:
  architecture: standalone
  auth:
    enabled: false
  commonConfiguration: |-
    # Enable AOF https://valkey.io/docs/topics/persistence.html
    # appendonly yes
    # Enable RDB persistence
    save 60 100
  commonLabels:
    system.processing: "true"
    system.storage: "true"
  primary:
    configuration: ""
    containerPorts:
      redis: 6379
    count: 1
    disableCommands:
      - FLUSHALL
    persistence:
      accessModes:
        - ReadWriteOnce
      enabled: true
      labels:
        system.processing: "true"
        system.storage: "true"
      path: /data
      size: 2Gi
      storageClass: ""
      subPath: ""
      subPathExpr: ""
    podLabels:
      system.processing: "true"
      system.storage: "true"

web-console:
  AUTHENTICATION_ALLOWED_TYPES: obsrv,ad
  AUTH_AD_BASE_DN: dc=example,dc=com
  AUTH_AD_PASSWORD: password1
  AUTH_AD_URL: ldap://localhost:3004
  AUTH_AD_USER_NAME: admin
  AUTH_GOOGLE_CLIENT_ID: 52913780720-2ldmrn41mbhciscjkenepcm76e0g6mh3.apps.googleusercontent.com
  AUTH_GOOGLE_CLIENT_SECRET: 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
  AUTH_OIDC_AUTHRIZATION_URL: http://localhost:8080/auth/realms/TestOIDCrealm/protocol/openid-connect/auth
  AUTH_OIDC_CLIENT_ID: oidctestclient
  AUTH_OIDC_CLIENT_SECRET: CsfLrFQwdRjZXhKr0t806BGVTWnN7M4k
  AUTH_OIDC_ISSUER: http://localhost:8080/auth/realms/TestOIDCrealm
  AUTH_OIDC_TOKEN_URL: http://localhost:8080/auth/realms/TestOIDCrealm/protocol/openid-connect/token
  AUTH_OIDC_USER_INFO_URL: http://localhost:8080/auth/realms/TestOIDCrealm/protocol/openid-connect/userinfo
  AUTH_TOKEN: *grafana_token
  GRAFANA_URL: http://{{.Values.global.domain}}/grafana
  OAUTH_WEB_CONSOLE_URL: '{{.Values.global.domain}}/console'
  SUPERSET_URL: http://{{.Values.global.domain}}

zookeeper:
  fullnameOverride: zookeeper
