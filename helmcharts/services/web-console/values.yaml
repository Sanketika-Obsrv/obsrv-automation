nameOverride: "web-console"
fullnameOverride: "web-console"

replicaCount: 1

global:
  image:
    registry: "sanketikahub"

registry: ""
repository: "obsrv-web-console"
tag: "1.0.0-GA"
digest: ""

imagePullPolicy: IfNotPresent
imagePullSecrets: []

commonLabels:
  system.dataset.management: "true"

commonAnnotations: {}

podAnnotations: {}

podSecurityContext:
  {}
  # runAsNonRoot: true
  # runAsUser: 1001
  # fsGroup: 1001

securityContext:
  {}
  # readOnlyRootFilesystem: false
  # capabilities:
  #   drop:
  #   - ALL

# This block is an interface for k8s service spec.
service:
  type: ClusterIP
  ports:
    - name: http
      port: 3000
      targetPort: 3000

ingress:
  enabled: false
  annotations: {}
  hosts:
    - paths:
        - /
      # host: chart-example.local

resources:
  limits:
    cpu: 0.5
    memory: 1024Mi
  requests:
    cpu: 0.5
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

livenessProbe:
  {}
  # httpGet:
  #   path: "/healthz"
  #   port: 8080
  # initialDelaySeconds: 5
  # periodSeconds: 5

readinessProbe:
  {}
  # httpGet:
  #   path: "/ready"
  #   port: 8080
  # initialDelaySeconds: 5
  # periodSeconds: 5

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: true
  mountPath: /config

serviceAccount:
  create: true
  annotations: {}

namespace: web-console
serviceMonitor:
  enabled: true
  selectorLabels:
    release: monitoring
    app: web-console
  endpoints:
    # - port: http # the name of the port in your service, assuming the primary service port is named 'http' in this example.
    #   path: /metrics
    #   interval: 30s
    #   scrapeTimeout: 10s
    #   honorLabels: true
    - path: /metrics
      interval: 30s
      scrapeTimeout: 5s
      honorLabels: true
      port: http

# Example values.yaml structure
initContainers:
  {}
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: ['sh', '-c', "until nslookup kubernetes.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

sidecars:
  {}
  # - name: log-reader # Sidecar container
  #   image: busybox # Use another busybox image
  #   command: ["/bin/sh"] # Override the default command
  #   args: ["-c", "tail -f /var/log/app.log"] # Run a shell script that tails the log file

rbac:
  create: true
  # rules:
  #   - apiGroups:
  #       - ""
  #     resources:
  #       - pods
  #     verbs:
  #       - get
  #       - list
  #
  rules:
    - apiGroups:
        - "*"
      resources:
        - "*"
      verbs:
        - "*"

startupCommand:
  - "/config/create_service_account.sh"
restartPolicy: "OnFailure"
grafana_url: "http://grafana.monitoring.svc.cluster.local"

env:
  ENV: "{{ .Values.global.env }}"
  PORT: "3000"
  APP_NAME: "obsrv-web-console"
  PROMETHEUS_URL: "http://monitoring-kube-prometheus-prometheus.monitoring:9090"
  CONFIG_API_URL: "http://dataset-api.dataset-api:3000"
  CONFIG_API_EXT_URL: "http://config-api.config-api:4000"
  OBS_API_URL: "http://dataset-api.dataset-api:3000"
  SYSTEM_API_URL: "http://command-api.command-api:8000"
  ALERT_MANAGER_URL: "http://alertmanager-operated.monitoring:9093"
  GRAFANA_ADMIN_URL: "http://grafana.monitoring.svc.cluster.local"
  GRAFANA_URL:  "http://{{.Values.global.domain}}/grafana"
  SUPERSET_URL: "http://{{.Values.global.domain}}"
  SESSION_SECRET: "backend-session"
  POSTGRES_CONNECTION_STRING: "postgres://{{.Values.global.postgresql.obsrv.user}}:{{.Values.global.postgresql.obsrv.password}}@{{.Values.global.postgresql.host}}:{{.Values.global.postgresql.port}}/{{.Values.global.postgresql.obsrv.name}}"
  OAUTH_WEB_CONSOLE_URL: "{{.Values.global.domain}}/console"
  AUTH_KEYCLOAK_REALM: "MyKeyCloakRealm"
  AUTH_KEYCLOAK_PUBLIC_CLIENT: "false"
  AUTH_KEYCLOAK_SSL_REQUIRED: "external"
  AUTH_KEYCLOAK_CLIENT_ID: "myOauthClient"
  AUTH_KEYCLOAK_CLIENT_SECRET: "SCWHeF9HgtJ5BjmJFruk2IW15a5auueq"
  AUTH_KEYCLOAK_SERVER_URL: "http://localhost:8080/auth"
  AUTH_GOOGLE_CLIENT_ID: "52913780720-2ldmrn41mbhciscjkenepcm76e0g6mh3.apps.googleusercontent.com"
  AUTH_GOOGLE_CLIENT_SECRET: "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"
  HTTPS: "false"
  REACT_APP_VERSION: "v1.2.0"
  GENERATE_SOURCEMAP: "false"
  AUTH_AD_URL: "ldap://localhost:3004"
  AUTH_AD_BASE_DN: "dc=example,dc=com"
  AUTH_AD_USER_NAME: "admin"
  AUTH_AD_PASSWORD: "password1"
  AUTHENTICATION_ALLOWED_TYPES: "obsrv,ad"
  AUTH_OIDC_ISSUER: "http://localhost:8080/auth/realms/TestOIDCrealm"
  AUTH_OIDC_AUTHRIZATION_URL: "http://localhost:8080/auth/realms/TestOIDCrealm/protocol/openid-connect/auth"
  AUTH_OIDC_TOKEN_URL: "http://localhost:8080/auth/realms/TestOIDCrealm/protocol/openid-connect/token"
  AUTH_OIDC_USER_INFO_URL: "http://localhost:8080/auth/realms/TestOIDCrealm/protocol/openid-connect/userinfo"
  AUTH_OIDC_CLIENT_ID: "oidctestclient"
  AUTH_OIDC_CLIENT_SECRET: "CsfLrFQwdRjZXhKr0t806BGVTWnN7M4k"
  AUTH_TOKEN: "YWRtaW46cHJvbS1vcGVyYXRvcg=="
  USER_TOKEN_PRIVATE_KEY: |-
    -----BEGIN PRIVATE KEY-----
    MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCzQ9QIpFLlU6Cm
    BhBHNgiayp57emmWwX+OA5SCLfd8dUdcPnM8HXl4tue4Wd5sXhDD2akv+BaLNUPm
    yHeA+HMFswwe/xD0g90mVy09XFY4rlhiWxYI/dsGBJ/OFwaylMEzT6wd174ZrvD/
    wHfo50oNdcVSg1wA3ZmjvwjEX5PrKuwo+w85tMCeTatdhoVUAOtN64LmaqxwiYje
    F3H3z/yQBAvLuxfVP329k2KPyMr3rngQR6FgEE/q7Pj4pqZmf+Jzf0JBbq6m59L4
    WbRUi7rfSiYytbKiPSiZXhpEyKh3S0V5BBeCHfE7b3Mo2+IRQrCe8qzFcWh7uRJM
    oEcET7ipAgMBAAECggEAEeN5CLBmf0ZEQoevXykisa5PeKXuByJhrqkSdu0hrwnq
    /ZGpISdrJDh9phVTD0BRxEwiSHb6v5h99qKBiQgB6QswG0sRBOgVt5+SaaGfDwKY
    L58ZnfsVvKOAfj8o/BrBBB71X3hUcC6svkYVZn3naLFxvTqo1y3wiM5lkGcIlTpl
    WXkoU7jPp3hpUZJ4Dbcv+hPXM2x5u9lcZoqYsoixO0m6bnrmrs1mP7OAXMSmQrAU
    Qyo6UL5OjJj3W51uWbOFwiQAPgj7oQ/y+TaiJYel+7gnu6M1tDJS8cFIowG9YzvN
    aqDcQTo8g8wgIzaYB33mrXkLd3Zeq+r+pruH0nsrowKBgQDam2EU4hkS/V7TLkrb
    F93mEfL+J6h7GQSCUPvLBfB4IrZszeMxjG+hyK+sxX5jFvWK4suEOg4PFWO9m9bO
    TBAM85muvqzQMBfZ4OuyAscvlDApzl+SyqJFflJGkcMKGaOyh2tja7MWgR+sS03g
    W5s9XWKvHiMhaffXw5j1ysc2pwKBgQDR7bHqi6bzQzsh/GshKz/c0ev7OCi2kJUZ
    CAXHy5FavRTso9mC2vmjPrg+cmqy9Q7MhXuIsyJBc32vmYHtjKWFxmSPTSIc6UZp
    F13oD1jgQx35WMV6TzDqta2zf3d2TwvRWYPRW5zR1zHnyTQU7SGlm5Eq5DpXV6DO
    vcne96PQLwKBgBgo8frH3jOOEwvN4vIB2kFSHIPgSCuKoUfxwVI3ztLIK1ctDf3s
    4m2D635xuT0kTXDTDeEINYOPPp22+m+EUoXL6mE4q4q6tfgbdpEO44qrmwMTztY/
    VN3PTzKDa4XTPZc+hizPu1QyYxi8nde86BRJHN3zu7g2qPCMqnwHtCqjAoGAEjuO
    xEw0x9QDAsSlmU/kUA17bWpHPvP3vyDPP7cSfMsHUjY44gCaxe7gmaveUISwMFs3
    i3vjccPSGro+ap9YkPHWMgwE9nXcQ6xf35PVqESsCcgH/sN6ACifWYOsoH3lDN21
    cS1/xUnnb7Yt69NcpMGKLit8VbGqqcoaCl9/vskCgYByr9WVlByrpul1S6JQiwDO
    IuuV/x82brOvxOynUfKYI6wLArZGl01cYfdH5/X8chgq4Mn78RMxy5iyMr8vHUGG
    VDYhqLFNvGUqm0iccsGAwkAGiMJUk9buJ6FOY9n8I06+YtyG1xF7nGGK58TVbcx2
    kRwXv/ZLXfa6YeD0MrMJHw==
    -----END PRIVATE KEY-----
  AUTHENTICATION_TYPE: "basic"  
  KEYCLOAK_REALM: ""
  KEYCLOAK_CLIENT_ID: ""
  KEYCLOAK_PUBLIC_CLIENT: ""
  KEYCLOAK_SSL_REQUIRED: ""
    
# Seems to be unused
# grafana_secret_allowed_namespaces: "dataset-api,web-console"
# grafana_secret_name: "grafana-secret"
