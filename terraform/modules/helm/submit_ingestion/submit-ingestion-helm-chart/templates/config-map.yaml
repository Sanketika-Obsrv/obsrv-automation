apiVersion: v1
kind: ConfigMap
metadata:
  name: ingestion-spec-config
  namespace: {{ .Values.namespace }}
data:
  system-stats-ingestion-spec.json: |-
    {
      "type": "kafka",
      "spec": {
        "dataSchema": {
          "dataSource": "{{ .Values.ingestion_spec.system_stats.name }}",
          "dimensionsSpec": {
            "dimensions": [
              {
                "type": "string",
                "name": "etype"
              },
              {
                "type": "string",
                "name": "ctx_module"
              },
              {
                "type": "string",
                "name": "ctx_pdata_id"
              },
              {
                "type": "string",
                "name": "ctx_pdata_type"
              },
              {
                "type": "string",
                "name": "ctx_pdata_pid"
              },
              {
                "type": "string",
                "name": "ctx_dataset"
              },
              {
                "type": "string",
                "name": "data_error_pdata_id"
              },
              {
                "type": "string",
                "name": "data_error_pdata_status"
              },
              {
                "type": "string",
                "name": "data_error_error_type"
              },
              {
                "type": "string",
                "name": "data_error_error_code"
              },
              {
                "type": "string",
                "name": "data_error_error_message"
              },
              {
                "type": "string",
                "name": "data_error_error_level"
              },
              {
                "type": "long",
                "name": "data_error_error_count"
              }
            ]
          },
          "timestampSpec": {
            "column": "ets",
            "format": "auto"
          },
          "metricsSpec": [
            {
              "type": "count",
              "name": "count"
            },
            {
              "type": "longSum",
              "name": "data_error_error_count",
              "fieldName": "data_error_error_count"
            }
          ],
          "granularitySpec": {
            "type": "uniform",
            "segmentGranularity": "DAY",
            "rollup": true
          }
        },
        "tuningConfig": {
          "type": "kafka",
          "maxBytesInMemory": 134217728,
          "maxRowsPerSegment": 500000,
          "logParseExceptions": true
        },
        "ioConfig": {
          "type": "kafka",
          "topic": "{{ .Values.ingestion_spec.system_stats.topic }}",
          "consumerProperties": {
            "bootstrap.servers": "{{ .Values.bootstrap_servers }}"
          },
          "taskCount": 1,
          "replicas": 1,
          "taskDuration": "PT1H",
          "useEarliestOffset": true,
          "completionTimeout": "PT1H",
          "inputFormat": {
            "type": "json",
            "flattenSpec": {
              "useFieldDiscovery": true,
              "fields": [
                {
                  "type": "path",
                  "expr": "$.etype",
                  "name": "etype"
                },
                {
                  "type": "path",
                  "expr": "$.ctx.module",
                  "name": "ctx_module"
                },
                {
                  "type": "path",
                  "expr": "$.ctx.pdata.id",
                  "name": "ctx_pdata_id"
                },
                {
                  "type": "path",
                  "expr": "$.ctx.pdata.type",
                  "name": "ctx_pdata_type"
                },
                {
                  "type": "path",
                  "expr": "$.ctx.pdata.pid",
                  "name": "ctx_pdata_pid"
                },
                {
                  "type": "path",
                  "expr": "$.ctx.dataset",
                  "name": "ctx_dataset"
                },
                {
                  "type": "path",
                  "expr": "$.data.error.pdata_id",
                  "name": "data_error_pdata_id"
                },
                {
                  "type": "path",
                  "expr": "$.data.error.pdata_status",
                  "name": "data_error_pdata_status"
                },
                {
                  "type": "path",
                  "expr": "$.data.error.error_type",
                  "name": "data_error_error_type"
                },
                {
                  "type": "path",
                  "expr": "$.data.error.error_code",
                  "name": "data_error_error_code"
                },
                {
                  "type": "path",
                  "expr": "$.data.error.error_message",
                  "name": "data_error_error_message"
                },
                {
                  "type": "path",
                  "expr": "$.data.error.error_level",
                  "name": "data_error_error_level"
                },
                {
                  "type": "path",
                  "expr": "$.data.error.error_count",
                  "name": "data_error_error_count"
                },
                {
                  "type": "path",
                  "expr": "$.ets",
                  "name": "ets"
                }
              ]
            }
          },
          "appendToExisting": false
        }
      }
    }

  failed-events-ingestion-spec.json: |- 
    {
      "type": "kafka",
      "spec": {
        "dataSchema": {
          "dataSource": "{{ .Values.ingestion_spec.failed_events.name }}",
          "dimensionsSpec": {
            "dimensions": [
              {
                "type": "string",
                "name": "obsrv_meta_flags_validator"
              },
              {
                "type": "long",
                "name": "obsrv_meta_prevProcessingTime"
              },
              {
                "type": "string",
                "name": "obsrv_meta_error_src_enumClass"
              },
              {
                "type": "string",
                "name": "obsrv_meta_error_src_value"
              },
              {
                "type": "string",
                "name": "obsrv_meta_error_error_code"
              },
              {
                "type": "string",
                "name": "obsrv_meta_error_error_msg"
              },
              {
                "type": "long",
                "name": "obsrv_meta_processingStartTime"
              },
              {
                "type": "long",
                "name": "obsrv_meta_timespans_validator"
              },
              {
                "type": "string",
                "name": "event"
              },
              {
                "type": "string",
                "name": "dataset"
              }
            ]
          },
          "timestampSpec": {
            "column": "obsrv_meta_syncts",
            "format": "auto"
          },
          "metricsSpec": [],
          "granularitySpec": {
            "type": "uniform",
            "segmentGranularity": "day",
            "queryGranularity": "none",
            "rollup": false
          }
        },
        "tuningConfig": {
          "type": "kafka",
          "maxBytesInMemory": 134217728,
          "maxRowsPerSegment": 500000,
          "logParseExceptions": true
        },
        "ioConfig": {
          "type": "kafka",
          "topic": "{{ .Values.ingestion_spec.failed_events.topic }}",
          "consumerProperties": {
            "bootstrap.servers": "{{ .Values.bootstrap_servers }}"
          },
          "taskCount": 1,
          "replicas": 1,
          "taskDuration": "PT1H",
          "useEarliestOffset": true,
          "completionTimeout": "PT1H",
          "inputFormat": {
            "type": "json",
            "flattenSpec": {
              "useFieldDiscovery": true,
              "fields": [
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.flags.validator",
                  "name": "obsrv_meta_flags_validator"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.syncts",
                  "name": "obsrv_meta_syncts"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.prevProcessingTime",
                  "name": "obsrv_meta_prevProcessingTime"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.error.src.enumClass",
                  "name": "obsrv_meta_error_src_enumClass"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.error.src.value",
                  "name": "obsrv_meta_error_src_value"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.error.error_code",
                  "name": "obsrv_meta_error_error_code"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.error.error_msg",
                  "name": "obsrv_meta_error_error_msg"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.processingStartTime",
                  "name": "obsrv_meta_processingStartTime"
                },
                {
                  "type": "path",
                  "expr": "$.obsrv_meta.timespans.validator",
                  "name": "obsrv_meta_timespans_validator"
                },
                {
                  "type": "path",
                  "expr": "$.event",
                  "name": "event"
                },
                {
                  "type": "path",
                  "expr": "$.dataset",
                  "name": "dataset"
                }
              ]
            }
          },
          "appendToExisting": false
        }
      }
    } 
