cloud_store_provider: "${cloud_store_provider}"
cloud_storage_bucket: "${cloud_storage_bucket}"
upload_manager : "${upload_manager}"
namespace: "${secor_namespace}"
storageClass: "${storage_class}"
secor_env: "${deployment_stage}"
image_repository: "${image_repository}"
region: "${region}"
pullPolicy: "${image_pull_policy}"
jvm_memory: "${jvm_memory}"
image_tag: "${secor_image_tag}"
message_timezone: "${message_timezone}"
parser_timezone: "${parser_timezone}"
secor_jobs:
  ingest-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_ingest"
    service_name: "ingest-backup"
    base_path: "${base_path}/ingest"
    timestamp_key: "${extractor_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.ingest"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  extractor-duplicate-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_extractor_duplicate"
    service_name: "extractor_duplicate"
    base_path: "${base_path}/extractor-duplicates"
    timestamp_key: "${extractor_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.extractor.duplicate"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  extractor-failed-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_extractor_failed"
    service_name: "extractor_failed"
    base_path: "${base_path}/extractor-failed"
    timestamp_key: "${extractor_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.extractor.failed"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  raw-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_raw"
    service_name: "raw"
    base_path: "${base_path}/raw"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.raw"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  failed-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_failed"
    service_name: "failed"
    base_path: "${base_path}/failed"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.failed"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  invalid-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_invalid"
    service_name: "invalid"
    base_path: "${base_path}/invalid"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.invalid"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  unique-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_unique"
    service_name: "unique"
    base_path: "${base_path}/unique"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.unique"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  duplicate-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_duplicate"
    service_name: "duplicate"
    base_path: "${base_path}/duplicates"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.duplicate"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  denorm-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_denorm"
    service_name: "denorm"
    base_path: "${base_path}/denorm"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.denorm"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  denorm-failed-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_denorm_failed"
    service_name: "denorm_failed"
    base_path: "${base_path}/denorm-failed"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.denorm.failed"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  transform-backup:
    replicas: 1
    consumer_group: "${deployment_stage}_transform"
    service_name: "transform"
    base_path: "${base_path}/transformed"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.transform"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  system-stats:
    replicas: 1
    consumer_group: "${deployment_stage}_system_stats"
    service_name: "system-stats"
    base_path: "${base_path}/system-stats"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.stats"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

  system-events:
    replicas: 1
    consumer_group: "${deployment_stage}_system_events"
    service_name: "system-events"
    base_path: "${base_path}/system-events"
    timestamp_key: "${default_timestamp_key}"
    fallback_timestamp_key: "${fallback_timestamp_key}"
    topic: "${deployment_stage}.system.events"
    kafka_broker_host: "${kafka_broker_host}"
    zookeeper_quorum: "${zookeeper_quorum}"
    max_file_size: "${file_size}"
    max_file_age: "${file_age}"
    partition_prefix_enabled: "false"
    partition_prefix_key: ""
    partition_prefix_mapping: "{}"
    message_channel_identifier: "data.dataset"
    output_file_pattern: "{partition}-{currentTimestamp}.json"
    message_parser: "com.pinterest.secor.parser.ChannelDateMessageParser"
    storage:
      size: "${backup_pv_size}"
    requests:
      cpu: "${request_cpu}"
      memory: "${request_memory}"
    limits:
      cpu: "${secor_cpu_limit}"
      memory: "${secor_memory_limit}"
    lag_threshold_warning: 100000
    threads: "${threads}"
    lag_threshold_critical: 200000

alertrules:
  enabled: false

describedobject:
  name: "data-path"